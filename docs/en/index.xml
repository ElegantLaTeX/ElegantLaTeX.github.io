<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>ElegantLaTeX on Documentation for ElegantLaTeX Templates</title>
    <link>/en/</link>
    <description>Recent content in ElegantLaTeX on Documentation for ElegantLaTeX Templates</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <lastBuildDate>Sat, 09 Apr 2016 16:50:16 +0200</lastBuildDate>
    
	<atom:link href="/en/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Archetypes</title>
      <link>/en/cont/archetypes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/en/cont/archetypes/</guid>
      <description>Using the command: hugo new [relative new content path], you can start a content file with the date and title automatically set. While this is a welcome feature, active writers need more : archetypes.
It is pre-configured skeleton pages with default front matter. Please refer to the documentation for types of page to understand the differences.
Chapter To create a Chapter page, run the following commands
hugo new --kind chapter &amp;lt;name&amp;gt;/_index.</description>
    </item>
    
    <item>
      <title>Prérequis</title>
      <link>/en/basics/requirements/_index.fr/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/en/basics/requirements/_index.fr/</guid>
      <description>Grâce à la simplicité d&amp;rsquo;Hugo, cette page est vide car il n&amp;rsquo;y a quasi pas de prérequis pour utiliser le thème.
Téléchargez la dernière version du binaire Hugo (&amp;gt; 0.25) pour votre Système d&amp;rsquo;exploitation (Windows, Linux, Mac) : et c&amp;rsquo;est tout !</description>
    </item>
    
    <item>
      <title>Markdown syntax</title>
      <link>/en/cont/markdown/</link>
      <pubDate>Sat, 09 Apr 2016 16:50:16 +0200</pubDate>
      
      <guid>/en/cont/markdown/</guid>
      <description>This page is a shameful copy of the great Grav original page. Only difference is information about image customization (resizing, add CSS classes&amp;hellip;)
 Let&amp;rsquo;s face it: Writing content for the Web is tiresome. WYSIWYG editors help alleviate this task, but they generally result in horrible code, or worse yet, ugly web pages.
Markdown is a better way to write HTML, without all the complexities and ugliness that usually accompanies it.</description>
    </item>
    
    <item>
      <title>Installation</title>
      <link>/en/basics/installation/_index.fr/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/en/basics/installation/_index.fr/</guid>
      <description>Les étapes suivantes sont là pour vous aider à initialiser votre site. Si vous ne connaissez pas du tout Hugo, il est fortement conseillé de vous entrainer en suivant ce super tuto pour débutants.
Créer votre projet Hugo fournit une commande new pour créer un nouveau site.
hugo new site &amp;lt;new_project&amp;gt;  Installer le thème Installer le thème Hugo-theme-learn en suivant cette documentation
Le repo du thème est : https://github.</description>
    </item>
    
    <item>
      <title>Configuration</title>
      <link>/en/basics/configuration/_index.fr/</link>
      <pubDate>Sat, 09 Apr 2016 16:50:16 +0200</pubDate>
      
      <guid>/en/basics/configuration/_index.fr/</guid>
      <description>Paramètres globaux du site En plus de la configuration globale d&amp;rsquo;Hugo, Hugo-theme-learn vous permet de définir les paramètres suivant dans votre fichier config.toml (ci-dessous sont affichées les valeurs par défaut).
Notez que certains de ces paramètres sont expliqués en détails dans d&amp;rsquo;autres sections de cette documentation.
[params] # L&#39;URL préfixe pour éditer la page courante. Ce paramètre affichera un bouton &amp;quot;Modifier cette page&amp;quot; on haut de de chacune des pages.</description>
    </item>
    
    <item>
      <title>Menu extra shortcuts</title>
      <link>/en/cont/menushortcuts/</link>
      <pubDate>Sat, 09 Apr 2016 16:50:16 +0200</pubDate>
      
      <guid>/en/cont/menushortcuts/</guid>
      <description>You can define additional menu entries or shortcuts in the navigation menu without any link to content.
Basic configuration Edit the website configuration config.toml and add a [[menu.shortcuts]] entry for each link your want to add.
Example from the current website:
[[menu.shortcuts]] name = &amp;quot;&amp;lt;i class=&#39;fab fa-github&#39;&amp;gt;&amp;lt;/i&amp;gt; Github repo&amp;quot; identifier = &amp;quot;ds&amp;quot; url = &amp;quot;https://github.com/matcornic/hugo-theme-learn&amp;quot; weight = 10 [[menu.shortcuts]] name = &amp;quot;&amp;lt;i class=&#39;fas fa-camera&#39;&amp;gt;&amp;lt;/i&amp;gt; Showcases&amp;quot; url = &amp;quot;/showcase&amp;quot; weight = 11 [[menu.</description>
    </item>
    
    <item>
      <title>Personnalisation du style</title>
      <link>/en/basics/style-customization/_index.fr/</link>
      <pubDate>Sat, 09 Apr 2016 16:50:16 +0200</pubDate>
      
      <guid>/en/basics/style-customization/_index.fr/</guid>
      <description>Hugo-theme-learn a été conçu pour être aussi configurable que possible en définissant plusieurs partials
Dans themes/hugo-theme-learn/layouts/partials/, vous pourrez trouver tous les partials définis pour ce thème. Si vous avez besoin d&amp;rsquo;écraser quelque chose, ne modifiez pas le code directement. A la place, suivez cette page. Vous créerez alors un nouveau partial dans le dossier layouts/partials de votre site local. Ce partial aura la priorité.
Ce thème définit les partials suivant :</description>
    </item>
    
    <item>
      <title>Icons and logos</title>
      <link>/en/cont/icons/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/en/cont/icons/</guid>
      <description>The Learn theme for Hugo loads the Font Awesome library, allowing you to easily display any icon or logo available in the Font Awesome free collection.
Finding an icon Browse through the available icons in the Font Awesome Gallery. Notice that the free filter is enabled, as only the free icons are available by default.
Once on the Font Awesome page for a specific icon, for example the page for the heart, copy the HTML reference and paste into the markdown content.</description>
    </item>
    
    <item>
      <title>Attachments</title>
      <link>/en/shortcodes/attachments/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/en/shortcodes/attachments/</guid>
      <description>The Attachments shortcode displays a list of files attached to a page.
  Attachments   BachGavotteShort.mp3  (357 ko)   Carroll_AliceAuPaysDesMerveilles.pdf  (175 ko)   adivorciarsetoca00cape.pdf  (361 ko)   hugo.png  (17 ko)   movieselectricsheep-flock-244-32500-2.mp4  (340 ko)    Usage The shortcurt lists files found in a specific folder. Currently, it support two implementations for pages
 If your page is a markdown file, attachements must be place in a folder named like your page and ending with .</description>
    </item>
    
    <item>
      <title>Button</title>
      <link>/en/shortcodes/button/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/en/shortcodes/button/</guid>
      <description>A button is a just a clickable button with optional icon.
{{% button href=&amp;quot;https://getgrav.org/&amp;quot; %}}Get Grav{{% /button %}} {{% button href=&amp;quot;https://getgrav.org/&amp;quot; icon=&amp;quot;fas fa-download&amp;quot; %}}Get Grav with icon{{% /button %}} {{% button href=&amp;quot;https://getgrav.org/&amp;quot; icon=&amp;quot;fas fa-download&amp;quot; icon-position=&amp;quot;right&amp;quot; %}}Get Grav with icon right{{% /button %}}  Get Grav   Get Grav with icon  Get Grav with icon right   </description>
    </item>
    
    <item>
      <title>Credits</title>
      <link>/en/credits/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/en/credits/</guid>
      <description>Contributors Thanks to them  for making Open Source Software a better place !
.ghContributors{ display:flex; flex-flow: wrap; align-content: flex-start } .ghContributors  div{ width: 50% ; display: inline-flex; margin-bottom: 5px; } .ghContributors  div label{ padding-left: 4px ; } .ghContributors  div span{ font-size: x-small; padding-left: 4px ; }   @matcornic 149 commits   @matalo33 27 commits   @lierdakil 16 commits   @gwleclerc 13 commits   @mdavids 10 commits   @coliff 6 commits   @Xipas 5 commits   @mreithub 3 commits   @willwade 3 commits   @denisvm 2 commits   @gpospelov 2 commits   @tanzaho 2 commits   @wikijm 2 commits   @lfalin 2 commits   @alexvargasbenamburg 1 commits   @afs2015 1 commits   @arifpedia 1 commits   @MrMoio 1 commits   @ChrisLasar 1 commits   @giuliov 1 commits   @haitch 1 commits   @RealOrangeOne 1 commits   @JohnBlood 1 commits   @kamilchm 1 commits   @lloydbenson 1 commits   @sykesm 1 commits   @654wak654 1 commits   @ripienaar 1 commits   @EnigmaCurry 1 commits   @shelane 1 commits   @tedyoung 1 commits   @Thiht 1 commits   @fossabot 1 commits   @kamar535 1 commits   @nonumeros 1 commits   @pgorod 1 commits   @proelbtn 1 commits   And a special thanks to @vjeantet for his work on docdock, a fork of hugo-theme-learn.</description>
    </item>
    
    <item>
      <title>Expand</title>
      <link>/en/shortcodes/expand/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/en/shortcodes/expand/</guid>
      <description>The Expand shortcode displays an expandable/collapsible section of text on your page. Here is an example
  Expand me...   Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.</description>
    </item>
    
    <item>
      <title>Mermaid</title>
      <link>/en/shortcodes/mermaid/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/en/shortcodes/mermaid/</guid>
      <description>Mermaid is a library helping you to generate diagram and flowcharts from text, in a similar manner as Markdown.
Just insert your mermaid code in the mermaid shortcode and that&amp;rsquo;s it.
Flowchart example {{&amp;lt;mermaid align=&amp;quot;left&amp;quot;&amp;gt;}} graph LR; A[Hard edge] --&amp;gt;|Link text| B(Round edge) B --&amp;gt; C{Decision} C --&amp;gt;|One| D[Result one] C --&amp;gt;|Two| E[Result two] {{&amp;lt; /mermaid &amp;gt;}}  renders as
graph LR; A[Hard edge] --|Link text| B(Round edge) B -- C{Decision} C --|One| D[Result one] C --|Two| E[Result two]  Sequence example {{&amp;lt;mermaid&amp;gt;}} sequenceDiagram participant Alice participant Bob Alice-&amp;gt;&amp;gt;John: Hello John, how are you?</description>
    </item>
    
    <item>
      <title>Notice</title>
      <link>/en/shortcodes/notice/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/en/shortcodes/notice/</guid>
      <description>The notice shortcode shows 4 types of disclaimers to help you structure your page.
Note {{% notice note %}} A notice disclaimer {{% /notice %}}  renders as
A notice disclaimer
 Info {{% notice info %}} An information disclaimer {{% /notice %}}  renders as
An information disclaimer
 Tip {{% notice tip %}} A tip disclaimer {{% /notice %}}  renders as
A tip disclaimer
 Warning {{% notice warning %}} An warning disclaimer {{% /notice %}}  renders as</description>
    </item>
    
    <item>
      <title>Showcase</title>
      <link>/en/showcase/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/en/showcase/</guid>
      <description> TAT by OVH </description>
    </item>
    
    <item>
      <title>Site param</title>
      <link>/en/shortcodes/siteparam/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/en/shortcodes/siteparam/</guid>
      <description>siteparam shortcode is used to help you print values of site params.
For instance, in this current site, the editURL variable is used in config.toml
[params] editURL = &amp;quot;https://github.com/matcornic/hugo-theme-learn/edit/master/exampleSite/content/&amp;quot;  Use the siteparam shortcode to display its value.
`editURL` Value : {{% siteparam &amp;quot;editURL&amp;quot; %}}  is displayed as
editURL Value : </description>
    </item>
    
    <item>
      <title>page test</title>
      <link>/en/shortcodes/children/test/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/en/shortcodes/children/test/</guid>
      <description>This is a test demo child page</description>
    </item>
    
    <item>
      <title>page test 3</title>
      <link>/en/shortcodes/children/children-2/test3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/en/shortcodes/children/children-2/test3/</guid>
      <description>This is a test 3 demo child page</description>
    </item>
    
  </channel>
</rss>